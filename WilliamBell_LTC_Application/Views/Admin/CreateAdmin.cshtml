@model WilliamBell_LTC_Application.Models.ViewModels.CreateStaffViewModel

@{
    ViewBag.Title = "Create" + Model.Type;
}

<h2>Create @Model.Type</h2>
<p>@Html.ActionLink("Back", "AllStaff", "Admin", null, new { @class = "btn btn-secondary" })
@Html.ActionLink("Dashboard", "Dashboard", "Dashboard", null, new { @class = "btn btn-secondary" })</p>

@using (Html.BeginForm("CreateAdmin", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
        @Html.HiddenFor(m => m.Type)
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, null, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "text-danger" })
        </div>
    </div>

    <!--roles-->
    if (!Model.Type.Equals("Moderator"))
    {
        <div class="form-group">
            <div class="col-md-2 control-label">Additional Roles</div>

            <div class="col">
                @for (int i = 0; i < Model.Roles.Count; i++)
                {
                    <div class="form-check">
                        @Html.CheckBoxFor(r => r.Roles[i].IsSelected, new { @class = "form-check-input", @id = "role-check-" + i })
                        @Html.HiddenFor(r => r.Roles[i].Id)
                        @Html.HiddenFor(r => r.Roles[i].Name)
                        <label for="role-check-@i" class="form-check-label">@Model.Roles[i].Name</label>
                    </div>
                }
            </div>
            @Html.ValidationMessageFor(m => m.Roles, null, new { @class = "text-danger" })
        </div>
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-lg btn-success" value="Register" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "AllStaff", "Admin", null, new { @class = "btn btn-default" })
</div>
