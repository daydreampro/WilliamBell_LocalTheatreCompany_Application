@using WilliamBell_LTC_Application.Models.ViewModels
@using Microsoft.AspNet.Identity
@model CommentViewModel

<div class="accordion" id="commentAccordian-@Model.CommentId" style="margin-left:@Model.Padding.ToString()px;">

    <div class="card border-dark rounded-top">

        <div class="card-header" id="commentHeading-@Model.CommentId" style="padding:0.2rem;">
            @{Html.RenderAction("GetMiniProfile", "Profiles", new { userId = Model.UserId, commentId = Model.CommentId, deleted = Model.DELETED });}
        </div>

        <div class="card-subtitle">
            <p class="card-text"><small class="text-muted">Date Posted: @Model.DateTime</small></p>
        </div>

        <div id="comment-body-@Model.CommentId" class="card-body">
            @Model.CommentContet
        </div>
        @if (User.IsInRole("User") && !User.IsInRole("Silenced"))
        {
            if (User.Identity.GetUserId().Equals(Model.UserId))
            {
                <div id="edit-comment-@Model.CommentId" class="edit-comment card-body" style="display:none;">

                    <form id="edit-comment-form-@Model.CommentId">
                        <div class="form-group">
                            <textarea id="edit-comment-text-@Model.CommentId" style="resize:none; max-width:none;" required class="form-control" aria-describedby="edit-validation-text">@Model.CommentContet</textarea>
                            <div id="edit-comment-validation-message-@Model.CommentId" class="text-hide"><span id="edit-validation-text"></span></div>
                        </div>

                        <div >
                            <button type="button"  class="edit-comment-submit btn btn-dark">Save</button>
                            <button type="button"  class="edit-comment-cancel btn btn-dark">Cancel</button>
                        </div>
                    </form>
                </div>

            }
        }

        <div id="comment-footer-@Model.CommentId" class="comment-footer card-footer" style="padding:1px !important;">

            <div class="d-flex justify-content-start align-items-center">

                <div class="comment-footer-likes mr-auto p-2 bd-highlight d-flex justify-content-start align-items-center" data-toggle="tooltip" data-placement="bottom" title="Up: @Model.UpVotes || Down: @Model.DownVotes">
                    @if (Model.DELETED || string.IsNullOrEmpty(User.Identity.GetUserId()))
                    {
                        <button type="button" value="@Model.CommentId" disabled class="btn btn-dark btn-sm">
                            <i class="fas fa-thumbs-up"></i>
                        </button>
                        <div class="card-text comment-score comment-score-@Model.CommentId">@Model.Score</div>
                        <button type="button" value="@Model.CommentId" disabled class="btn btn-dark btn-sm">
                            <i class="fas fa-thumbs-down"></i>
                        </button>
                    }

                    else if (Model.UserVote != null)
                    {
                        <!--IF THE USER HAS VOTED!-->
                        if (Model.UserVote.UpVote)
                        {
                            <!--UP VOTE-->
                            <button type="button" value="@Model.CommentId" class="button-comment-up-active btn ltc-btn-primary btn-sm">
                                <i class="fas fa-thumbs-up"></i>
                            </button>

                            <div class="card-text comment-score comment-score-@Model.CommentId">@Model.Score</div>
                            <button type="button" value="@Model.CommentId" class="button-comment-down btn btn-dark btn-sm">
                                <i class="fas fa-thumbs-down"></i>
                            </button>
                        }
                        else
                        {
                            <!--DOWN VOTE-->
                            <button type="button" value="@Model.CommentId" class="button-comment-up btn btn-dark btn-sm">
                                <i class="fas fa-thumbs-up"></i>
                            </button>
                            <div class="card-text comment-score comment-score-@Model.CommentId">@Model.Score</div>
                            <button type="button" value="@Model.CommentId" class="button-comment-down-active btn ltc-btn-primary btn-sm">
                                <i class="fas fa-thumbs-down"></i>
                            </button>
                        }

                    }
                    else
                    {
                        <!--USER HAS NOT VOTED-->
                        <button type="button" value="@Model.CommentId" class="button-comment-up btn btn-dark btn-sm">
                            <i class="fas fa-thumbs-up"></i>
                        </button>
                        <div class="card-text comment-score comment-score-@Model.CommentId">@Model.Score</div>
                        <button type="button" value="@Model.CommentId" class="button-comment-down btn btn-dark btn-sm">
                            <i class="fas fa-thumbs-down"></i>
                        </button>
                    }

                </div>
                <div class="comment-buttons-right p-2 bd-highlight">
                    @if (Model.DELETED)
                    {
                        <button type="button" value="@Model.CommentId" aria-disabled="true" disabled class="replyButton btn btn-dark" title="Reply">
                            <i class="fas fa-reply"></i>
                        </button>
                    }
                    else
                    {
                        <button type="button" value="@Model.CommentId" class="replyButton btn btn-dark" title="Reply">
                            <i class="fas fa-reply"></i>
                        </button>
                    }


                    @if (Model.ChildrenCommentsCount > 0)
                    {
                        <button type="button" class="button-collapse-replies btn btn-dark float-right"
                                data-toggle="collapse"
                                data-target="#collapseReplies-@Model.CommentId"
                                aria-expanded="true"
                                aria-controls="collapseOne"
                                data-placement="bottom" title="Hide Replies">
                            <i class="fas fa-comment-slash"></i>
                        </button>
                    }

                    @if (Model.DELETED)
                    {
                        <button id="comment-flag-button" aria-disabled="true" disabled type="button" class="btn btn-outline-danger float-right" title="Flag Comment">
                            <i class="fas fa-flag"></i>
                        </button>
                    }
                    else
                    {
                        <button id="comment-flag-button" value="@Model.CommentId" type="button" class="btn btn-outline-danger float-right" title="Flag Comment"
                                data-toggle="modal" data-target="#flag-comment-modal">
                            <i class="fas fa-flag"></i>
                        </button>
                    }
                </div>
            </div>
        </div>

        <div id="commentReply-@Model.CommentId"></div>


        @if (Model.ChildrenCommentsCount > 0)
        {
            <div id="collapseReplies-@Model.CommentId" class="collapse show" aria-labelledby="commentHeading-@Model.CommentId" data-parent="#commentAccordian-@Model.CommentId">

                @{Html.RenderAction("GetComments", "Comments", new { commentId = Model.CommentId, padding = 25 });}

            </div>
        }
    </div>



</div>

