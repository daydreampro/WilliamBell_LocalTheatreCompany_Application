@using WilliamBell_LTC_Application.Models.ViewModels
@model IEnumerable<NotificationsViewModel>
<script src="~/Scripts/jquery-3.6.0.min.js"
        type="text/javascript"></script>

<script type="text/javascript">
    //make the notification change to seen

    //once document is ready
    $(document).ready(function () {
        //upon click of a notification item
        $(".notification-item").click(function () {
            //update the css
            $(this).attr("class","dropdown-item notification-item-seen text-wrap");
            $(this).css({
                "background-color": "#fff",
                "border": "1px solid #dee2e6 !important",
                "padding":"5px 5px 0px 5px"
            });

            //check if the counter can be decremented
            //do so if it can
            var count = parseInt($(".notification-counter").text());
            if (count > 0) {
                count--;
                $(".notification-counter").text(count);
            }

            //update the notification "Seen" attribute to seen!
            var id = $(this).attr("id");
            id = id.substring(13);
            $.post("/Notifications/NotificationSeen", { "id": id });
        });
    });
</script>


<div class="notifications-dropdown dropdown">

    <a href="#" class="nav-link fa-navicon fas fa-bell" id="nav-notification-dropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <span class="badge badge-pill badge-light notification-counter">@ViewBag.NewNotificationCount</span>
    </a>

    <div class="dropdown-menu" aria-labelledby="nav-notification-dropdown" style="min-width:350px; max-width:400px;">

        <h6 class="dropdown-item-text">Notifications</h6>
        <div class="dropdown-divider"></div>

        <div class="" style="min-width:350px; max-width:400px;">
            @{
                if (Model.Count() > 0)
                {
                    int i = 0;
                    foreach (NotificationsViewModel n in Model)
                    {

                        if (!n.Seen)
                        {
                        <a style="background-color:#e9ecef;padding:5px 5px 0px 5px;" class="border dropdown-item notification-item text-wrap" id="notification-@n.Id" href="@Url.Content(n.Destination)">
                            @Html.Raw(n.Message)
                            <div class="dropdown-divider" style="width:60%; border-top-color:#cacaca;"></div>
                            <p class="text-muted font-italic" style="font-size:12px">@n.CreatedAt</p>
                        </a>
                        }
                        else
                        {
                            <a class="border dropdown-item notification-item-seen text-muted text-wrap" id="notification-@n.Id" href="@Url.Content(n.Destination)" 
                               style="background-color:#fff; padding:5px 5px 0px 5px">
                                @Html.Raw(n.Message)
                                <div class="dropdown-divider" style="width:60%;"></div>
                                <p class="text-muted font-italic" style="font-size:12px">@n.CreatedAt</p>
                            </a>
                        }

                        i++;
                        if (i > 4) { break; }
                    }

                    if (Model.Count() > 4)
                    {
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">View All</a>
                    }
                }
                else
                {
                    <span class="dropdown-header">No new notifications (<a class="text-decoration-none" href="#">View All</a>)</span>
                }
            }
        </div>
    </div>

</div>